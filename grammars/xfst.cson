# If this is your first time writing a language grammar, check out:
#   - http://manual.macromates.com/en/language_grammars

'scopeName': 'source.xfst'
'name': 'xfst'
'fileTypes': [
  'script'
  'xfst'
  'regex'
  'vars'
]
'patterns': [
  {'include': '#regex'}
  {'include': '#keywords'}
  {'include': '#command_ending'}
  {'include': '#string_curly'}
  {'include': '#variable'}
]
'repository':
  'string_curly':
      'comment': 'define a string declaration in curly brackets'
      'begin': '(\\{)'
      'end': '(\\})'
      'beginCaptures':
        '1':
          'name': 'punctuation.definition.string.xfst'
      'endCaptures':
        '1':
          'name': 'punctuation.definition.string.xfst'
      'contentName': 'string.quoted.other.xfst'
  'variable':
      'comment': 'define variables after a *define*'
      'match': 'define\\s+([A-Za-z_][A-Za-z0-9_]*)'
      'name': 'variable.parameter.xfst'
  'keywords':
      'comment': 'Define the possible keywords'
      'match': '(?:define|regex|read|union|print)'
      'name': 'keyword.other.xfst'
  'regex':
      'comment': 'define regex definitions'
      'begin': '(\\[)'
      'end': '(\\])'
      'beginCaptures':
        '1':
          'name': 'punctuation.definition.other.xfst'
      'endCaptures':
        '1':
          'name': 'punctuation.definition.other.xfst'
      'contentName': 'string.regexp.xfst'
      'patterns': [
        {'include': '#string_curly'}
      ]
  'command_ending':
      'match': '(;)\n'
      'name': 'punctuation.definition.keyword.xfst'
